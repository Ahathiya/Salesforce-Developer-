Module ---- Apex Integration Services

    2. Apex REST Callouts

                   i) AnimalLocator.apxc
      
                                              public class AnimalLocator 
			      {
                                                        public class cls_animal 
				   {
                                                                   public Integer id;  
                                                                   public String name;       
                                                                   public String eats;          
                                                                   public String says;         
                                                        }    
                                              	   public class JSONOutput
				  {
                                                                   public cls_animal animal;
                                              	   }
                                                  	   public static String getAnimalNameById (Integer id) 
				   {
                                                      	Http http = new Http();
                                                      	HttpRequest request = new HttpRequest();
                                                      	request.setEndpoint('https://th-apex-http-callout.herokuapp.com/animals/' + id);
                                                    
                                                      	request.setMethod('GET');
                                                      	HttpResponse response = http.send(request);
                                                      	system.debug('response: ' + response.getBody());
                                                      
                                                      	jsonOutput results = (jsonOutput) JSON.deserialize(response.getBody(), jsonOutput.class);
                                                                   system.debug('results= ' + results.animal.name);
                                                      	return(results.animal.name);
                                                  	  }
                                              }
      
                                        
                         ii) AnimalLocatorTest.apxc
      
                                                @IsTest
                                                public class AnimalLocatorTest 
			        {
                                                    @isTest
                                                    public static void testAnimalLocator() 
			            {
                                                        Test.setMock(HttpCalloutMock.class, new AnimalLocatorMock());
                                                        String s =  AnimalLocator.getAnimalNameById(1);
                                                        system.debug('string returned: ' + s);
                                                    }
                                                }
                                                                                                
                                                
                          iii) AnimalLocatorMock.apxc
 
                                                @IsTest
                                                global class AnimalLocatorMock implements HttpCalloutMock 
			        {
                                                      global HTTPresponse respond(HTTPrequest request) 
				 {
                                                        	Httpresponse response = new Httpresponse();
                                                        	response.setStatusCode(200);
                                                        	response.setBody('{"animal":{"id":1,"name":"chicken","eats":"chicken food","says":"cluck cluck"}}');
                                                        	return response;
                                                     }
                                                 }

                                 
    3. Apex SOAP Callouts
    

                       i) ParkLocator.apxc
      
                                                public class ParkLocator 
                                                {
                                                           public static string[] country(string theCountry)
				      {
                                                                ParkService.ParksImplPort parkSvc = new ParkService.ParksImplPort();
                                                                return parkSvc.byCountry(theCountry);
                                                            }
                                                 }

                        ii) ParkLocatorTest.apxc
      
                                                          @isTest
                                                          private class ParkLocatorTest 
				     {
                                                                 @isTest static void testCallout() 
				           {              
                                                                  		Test.setMock(WebServiceMock.class, new ParkServiceMock ());
                                                                  		String country = 'United States';
                                                                  		List<String> result = ParkLocator.country(country);
                                                                  		List<String> parks = new List<String>{'Yellowstone', 'Mackinac National Park', 'Yosemite'};
                                                                   	System.assertEquals(parks, result); 
                                                                 }
                                                            }


                         iii) ParkService.apxc
 
                                                       public class ParkService 
				  {
                                                            public class byCountryResponse 
				      {
                                                                public String[] return_x;
                                                                private String[] return_x_type_info = new String[]{'return','http://parks.services/',null,'0','-1','false'};
                                                                private String[] apex_schema_type_info = new String[]{'http://parks.services/','false','false'};
                                                                private String[] field_order_type_info = new String[]{'return_x'};
                                                            }

                                                            public class byCountry 
				       {
                                                                public String arg0;
                                                                private String[] arg0_type_info = new String[]{'arg0','http://parks.services/',null,'0','1','false'};
                                                                private String[] apex_schema_type_info = new String[]{'http://parks.services/','false','false'};
                                                                private String[] field_order_type_info = new String[]{'arg0'};
                                                             }

                                                             public class ParksImplPort 
				       {
                                                                public String endpoint_x = 'https://th-apex-soap-service.herokuapp.com/service/parks';
                                                                public Map<String,String> inputHttpHeaders_x;
                                                                public Map<String,String> outputHttpHeaders_x;
                                                                public String clientCertName_x;
                                                                public String clientCert_x;
                                                                public String clientCertPasswd_x;
                                                                public Integer timeout_x;
                                                                private String[] ns_map_type_info = new String[]{'http://parks.services/', 'ParkService'};
                                                                public String[] byCountry(String arg0) 
				          {
                                                                    ParkService.byCountry request_x = new ParkService.byCountry();
                                                                    request_x.arg0 = arg0;
                                                                    ParkService.byCountryResponse response_x;
                                                                    Map<String, ParkService.byCountryResponse> response_map_x = new Map<String, ParkService.byCountryResponse>();
                                                                    response_map_x.put('response_x', response_x);
                                                                    WebServiceCallout.invoke(this,request_x,response_map_x,new String[]{endpoint_x,'','http://parks.services/','byCountry','http://parks.services/','byCountryResponse''ParkService.byCountryResponse'}`	);
                                                                    response_x = response_map_x.get('response_x');
                                                                    return response_x.return_x;
                                                                }
                                                             }
                                                        }
                                                        
                                                        
                              iv) ParkServiceMock.apxc

                                                          @isTest
                                                          global class ParkServiceMock implements WebServiceMock 
				     {
                                                                global void doInvoke(
                                                                     Object stub,
                                                                     Object request,
                                                                     Map<String, Object> response,
                                                                     String endpoint,
                                                                     String soapAction,
                                                                     String requestName,
                                                                     String responseNS,
                                                                     String responseName,
                                                                     String responseType) 
					  {
                                                                  		ParkService.byCountryResponse response_x = new ParkService.byCountryResponse();
                                                               		response_x.return_x = new List<String>{'Yellowstone', 'Mackinac National Park', 'Yosemite'};
                                                                	             response.put('response_x', response_x); 
                                                             	  }
                                                          }
                                   
                                   
                                 v) AsyncParkService.apxc
      
                                                                  public class AsyncParkService 
					{
                                                                      	public class byCountryResponseFuture extends System.WebServiceCalloutFuture 
						{
                                                                          		public String[] getValue() 
							{
                                                                              			ParkService.byCountryResponse response =(ParkService.byCountryResponse)System.WebServiceCallout.endInvoke(this);
                                                                              			return response.return_x;
                                                                          		}
                                                                      	}
                                                                      	public class AsyncParksImplPort 
						{
                                                                          		public String endpoint_x = 'https://th-apex-soap-service.herokuapp.com/service/parks';
                                                                          		public Map<String,String> inputHttpHeaders_x;
                                                                          		public String clientCertName_x;
                                                                          		public Integer timeout_x;
                                                                          		private String[] ns_map_type_info = new String[]{'http://parks.services/', 'ParkService'};
                                                                          		public AsyncParkService.byCountryResponseFuture beginByCountry(System.Continuation continuation,String arg0) 
							{
                                                                              			ParkService.byCountry request_x = new ParkService.byCountry();
                                                                              			request_x.arg0 = arg0;
                                                                              			return (AsyncParkService.byCountryResponseFuture) 								System.WebServiceCallout.beginInvoke(this,request_x,AsyncParkService.byCountryResponseFuture.class,continuation,new String[]{endpoint_x,'','http://parks.services/','byCountry','http://parks.services/','byCountryResponse','ParkService.byCountryResponse'});
                                                                               		}
                                                                         	  }
                                                                  	    }

    4. Apex Web Services
    

                                i) AccountManager.apxc 
                                  
                                                              @RestResource(urlMapping='/Accounts/*/contacts')
                                                              global class AccountManager 
				        {
                                                                   @HttpGet
                                                                   global static Account getAccount() 
					{ 
                                                                      RestRequest req = RestContext.request;
                                                                      String accId = req.requestURI.substringBetween('Accounts/', '/contacts'); 
                                                                      Account acc = [SELECT Id, Name, (SELECT Id, Name FROM Contacts)FROM Account WHERE Id = :accId];
                                                                      return acc;
                                                                  }
                                                               }


                                 ii) AccountManagerTest.apxc

                                                    @IsTest
                                                    private class AccountManagerTest 
			            {
                                                          @isTest static void testGetContactsByAccountId()
				     {
                                                            	Id recordId = createTestRecord();
                                                            	RestRequest request = new RestRequest();
                                                            	request.requestUri = 'https://yourInstance.my.salesforce.com/services/apexrest/Accounts/'+ recordId+'/contacts';
                                                            	request.httpMethod = 'GET';
                                                            	RestContext.request = request;
                                                            	Account thisAccount = AccountManager.getAccount();
                                                            	System.assert(thisAccount != null);
                                                            	System.assertEquals('Test record', thisAccount.Name);
                                                             }

                                                             static Id createTestRecord()
				       {
					Account accountTest = new Account(Name ='Test record');
                                                             	insert accountTest;

                                                              	Contact contactTest = new Contact(
                                                                     	FirstName='John',
                                                                     	LastName = 'Doe',
                                                                     	AccountId = accountTest.Id);
                                                              	insert contactTest;

                                                              	return accountTest.Id;
                                                              }
                                                        }
